/// <reference path="../../typings/tsd.d.ts" />

/// <reference path="../../typings/express/express.d.ts" />


var root = require('root-path');
import path = require('path');
var fs = require('fs');

//import breeze = require('breeze-client');

var bs = require(root('/server/breeze_sequel/main'));
var s_mgr = bs.SequelizeManager;

//var s_qury = bs.SequelizeQuery;
//var s_shandle = bs.SequelizeSaveHandler
//var squlz = require('sequelize'); 
//require('./adapter');
//bs.breeze.config.initializeAdapterInstance('dataService', 'adapter_webApi', true);

var Con = require(root('/config/connections'));
var dbconn = Con.connections.dbconnection;

export function start_db(app: Express.Application) {
    
    var conn = new s_mgr(dbconn.config, dbconn.extra);
    
    //conn.sequelize.query("select top 10 * from occp", { type: squlz.QueryTypes.SELECT }).then(list => {
    //    var d = list;
    //});

    
    //initialize_models();

    //conn.importMetadata(store.DataStore.Store.exportMetadata());
    
    //var pred = breeze.Predicate.create('USRREMAIL', 'equals', 'seyaobey@gmail.com')
    //    .and('USRRPASSWORD', 'equals', 'JazzTheSoul1.');

    //var query = breeze.EntityQuery.from('USRR'); //.where(pred);

    //var qry = new s_qury(conn, query);


    //qry.execute().then(list => {

    //    save(conn, list);

    //}).catch(err => {


    //});

    return conn;
}


function save(conn: any, list:any[]) {
    
    //var em: breeze.EntityManager = new breeze.EntityManager({
    //    dataService: new breeze.DataService({
    //        serviceName: 'generic_service',
    //        hasServerMetadata: false
    //    })
    //});

    //em.metadataStore.importMetadata(store.DataStore.Store.exportMetadata());

    //list.forEach(e => {
    //    em.createEntity('USRR', e, breeze.EntityState.Unchanged, breeze.MergeStrategy.OverwriteChanges);
    //});

    //em.getEntities('USRR')[0]['USRRNAME'] ='taka-takata';

    //var adapter = bs.breeze.config.getAdapterInstance('dataService');

    //var ctx = {
    //    entityManager: em,
    //    dataService: adapter,
    //    processSavedEntities: () => { },
    //    resourceName: 'USRR'
    //}

    //var bundle = { entities: em.getEntities(), saveOptions: {} };

    //var save_bundle = adapter.saveChanges(ctx, bundle);

    //s_shandle.save(conn, {
    //    body: {
    //        entities: JSON.parse(save_bundle).entities
    //    }
    //}).then(rst => {

    //}).catch(err => {

    //});

}


function initialize_models() {

    //function add_to_store(datastore: any) {
    //    store.DataStore.add_dataStore(datastore);
    //}

    //add_to_store({
    //    namespace: 'stamp',
    //    shortName: 'USRR',
    //    defaultResourceName: 'USRR',
    //    autoGeneratedKeyType: breeze.AutoGeneratedKeyType.None,
    //    dataProperties: {
    //        ID: { dataType: breeze.DataType.String, isPartOfKey: true },
    //        USRRNAME: { maxLength: 4000 },
    //        USRRSURNAME: { maxLength: 4000 },
    //        USRRPASSWORD: { maxLength: 4000 },
    //        USRREMAIL: { maxLength: 4000 }
    //    }
    //});

}


